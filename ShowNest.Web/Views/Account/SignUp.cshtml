@model RegisterViewModel
@{
    ViewData["Title"] = "SignUp";
}

@section topCSS {
    <link rel="stylesheet" href="~/css/Account/SignUp.css">
}

<script src="https://accounts.google.com/gsi/client" async defer></script>

<div class="wallpaper">
    <div class="container">
        <div class="wrap">
            <div class="tab">
                <div class="log-in"><a asp-controller="Account" asp-action="LogIn">登入</a></div>
                <div class="sign-up">註冊</div>
            </div>
            <div class="input-area">
                <h3>建立 ShowNest 帳號</h3>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="user-name">
                        @Html.EditorFor(model => model.Account, new { htmlAttributes = new { @class = "form-control", placeholder = "使用者名稱", @id = "userName", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.Account, "", new { @class = "error-message text-danger" })
                    </div>
                    <div class="email">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "請輸入Email", @id = "email", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "error-message text-danger" })
                    </div>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="passwords">

                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "請輸入密碼", @id = "pass", @required = "required", @type = "password" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "error-message text-danger" })
                    </div>

                    <div class="passwords">

                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "請再輸入密碼", @id = "repass", @required = "required", @type = "password" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "error-message text-danger" })
                    </div>
                    <div class="birthday">
                        @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control", placeholder = "出生年月日", @id = "birthday", @required = "required", @type = "text", onfocus = "(this.type='date')" } })
                        @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "error-message text-danger" })
                    </div>

                    <div class="submit">
                        <input type="submit" id="submit" value="註冊">
                    </div>
                }
                <div class="other-log-in-methods">使用第三方帳號進行註冊</div>
                <div class="third-party-log-in">
                    <div id="g_id_onload"
                         data-client_id="674030001662-o9lopaeeoom0hu2o4ekci7h7d33fs6rv.apps.googleusercontent.com"
                         @* data-login_uri="https://localhost:7156/Account/GoogleRegisterOrLogin" *@
                         data-auto_prompt="false">
                    </div>
                    <div class="g_id_signin"
                         data-type="standard"
                         data-size="large"
                         data-theme="outline"
                         data-text="sign_in_with"
                         data-shape="rectangular"
                         data-logo_alignment="left">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // 獲取URL中的eventId參數
    var urlParams = new URLSearchParams(window.location.search);
    var eventId = urlParams.get('eventId');

    // 使用eventId設置data-login_uri的值
    var loginUri = `/Account/GoogleRegisterOrLogin?eventId=${eventId}`;
    document.getElementById('g_id_onload').setAttribute('data-login_uri', loginUri);

    // 重新初始化Google的登入按鈕
    google.accounts.id.initialize({
        client_id: '674030001662-o9lopaeeoom0hu2o4ekci7h7d33fs6rv.apps.googleusercontent.com',
        callback: handleCredentialResponse
    });
    google.accounts.id.prompt(); // 顯示登入提示

    // 處理登入回應的函數
    function handleCredentialResponse(response) {
        // 處理登入回應
    }
</script>