// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240325132304_Test03250921")]
    partial class Test03250921
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationCore.Entities.ArchiveOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasComment("新增時間");

                    b.Property<DateTime?>("EditedAt")
                        .HasColumnType("datetime")
                        .HasComment("修改時間");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("活動名稱");

                    b.Property<DateTime>("EventStartTime")
                        .HasColumnType("datetime")
                        .HasComment("活動開始時間");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("標記封存");

                    b.Property<string>("LocationAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("活動地址");

                    b.Property<string>("LocationName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("活動地點");

                    b.Property<int>("PurchaseAmount")
                        .HasColumnType("int")
                        .HasComment("購買數量");

                    b.Property<string>("SeatNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("座位號碼ex3排13號");

                    b.Property<string>("StreamingPlatform")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("串流平台");

                    b.Property<string>("StreamingUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("串流URL");

                    b.Property<string>("TicketNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("票號");

                    b.Property<decimal>("TicketPrice")
                        .HasColumnType("money")
                        .HasComment("票價");

                    b.Property<string>("TicketTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("票種名稱");

                    b.HasKey("OrderId");

                    b.ToTable("ArchiveOrders", t =>
                        {
                            t.HasComment("訂單紀錄");
                        });

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1986),
                            EventName = "演唱會",
                            EventStartTime = new DateTime(2024, 3, 25, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LocationAddress = "台北市松山區南京東路四段2號",
                            LocationName = "台北小巨蛋",
                            PurchaseAmount = 1,
                            SeatNumber = "3排13號",
                            TicketNumber = "A123456789",
                            TicketPrice = 1000m,
                            TicketTypeName = "一般票"
                        },
                        new
                        {
                            OrderId = 2,
                            CreatedAt = new DateTime(2024, 3, 24, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(2016),
                            EventName = "線上研討會",
                            EventStartTime = new DateTime(2024, 4, 1, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PurchaseAmount = 2,
                            StreamingPlatform = "Zoom",
                            StreamingUrl = "https://zoom.us/j/123456789",
                            TicketPrice = 0m,
                            TicketTypeName = "免費票"
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("區域ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("地區名稱");

                    b.HasKey("Id");

                    b.ToTable("Area", null, t =>
                        {
                            t.HasComment("偏好地區列表");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "北北基宜地區"
                        },
                        new
                        {
                            Id = 2,
                            Name = "桃竹苗地區"
                        },
                        new
                        {
                            Id = 3,
                            Name = "雲嘉南地區"
                        },
                        new
                        {
                            Id = 4,
                            Name = "高屏地區"
                        },
                        new
                        {
                            Id = 5,
                            Name = "中彰投地區"
                        },
                        new
                        {
                            Id = 6,
                            Name = "花東地區"
                        },
                        new
                        {
                            Id = 7,
                            Name = "澎金馬地區"
                        },
                        new
                        {
                            Id = 8,
                            Name = "香港"
                        },
                        new
                        {
                            Id = 9,
                            Name = "澳門"
                        },
                        new
                        {
                            Id = 10,
                            Name = "其他地區"
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.CategoryTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("類別TagID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasComment("新增時間");

                    b.Property<DateTime?>("EditeAt")
                        .HasColumnType("datetime")
                        .HasComment("修改時間");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasComment("標記刪除");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("類別Tag名稱");

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序預設50");

                    b.HasKey("Id")
                        .HasName("PK_Tags");

                    b.ToTable("CategoryTags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(885),
                            EditeAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(888),
                            Name = "音樂"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(893),
                            EditeAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(895),
                            Name = "戲劇"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(899),
                            EditeAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(902),
                            Name = "展覽"
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("活動ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Capacity")
                        .HasColumnType("int")
                        .HasComment("可容納人數");

                    b.Property<string>("CoOrganizer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("協辦單位");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("聯絡人欄位JSON");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasComment("新增時間");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("活動描述HTML");

                    b.Property<DateTime?>("EditedAt")
                        .HasColumnType("datetime")
                        .HasComment("修改時間");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime")
                        .HasComment("結束時間");

                    b.Property<string>("EventImage")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("活動主圖");

                    b.Property<string>("Introduction")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasComment("活動簡介");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("資料封存或強制下架");

                    b.Property<bool>("IsFree")
                        .HasColumnType("bit")
                        .HasComment("是否免費");

                    b.Property<bool>("IsPrivateEvent")
                        .HasColumnType("bit")
                        .HasComment("是否公開活動");

                    b.Property<string>("Latitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("緯度");

                    b.Property<string>("LocationAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("活動地址");

                    b.Property<string>("LocationName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("活動地點");

                    b.Property<string>("Longitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("經度");

                    b.Property<string>("MainOrganizer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("主辦單位");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("活動名稱");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int")
                        .HasComment("組織ID");

                    b.Property<string>("ParticipantPeople")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("報名人欄位JSON");

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("預設值50");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime")
                        .HasComment("開始時間");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasComment("0未發佈1已發佈");

                    b.Property<string>("StreamingPlatform")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("串流平台");

                    b.Property<string>("StreamingUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("串流網址");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint")
                        .HasComment("0線上1實體");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 500,
                            ContactPerson = "",
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(806),
                            Description = "線上活動描述內容區",
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(809),
                            EventImage = "https://picsum.photos/1300/600/?random=11",
                            Introduction = "線上活動簡介內容區",
                            IsFree = true,
                            IsPrivateEvent = false,
                            MainOrganizer = "Build School",
                            Name = "【線上直播課】掌握網路三大流量，讓你在同行中脫穎而出",
                            OrganizationId = 1,
                            ParticipantPeople = "[\r\n  {\r\n    \"ParticipantPeopleImage\": \"https://picsum.photos/200/200/?random=10\",\r\n    \"ParticipantPeopleId\": \"DDDD\"\r\n  },\r\n  {\r\n    \"ParticipantPeopleImage\": \"https://picsum.photos/200/200/?random=14\",\r\n    \"ParticipantPeopleId\": \"EEEE\"\r\n  },\r\n  {\r\n    \"ParticipantPeopleImage\": \"https://picsum.photos/200/200/?random=18\",\r\n    \"ParticipantPeopleId\": \"FFFF\"\r\n  }\r\n]\r\n",
                            StartTime = new DateTime(2024, 4, 8, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(788),
                            Status = (byte)1,
                            StreamingPlatform = "http;",
                            StreamingUrl = "http;",
                            Type = (byte)0
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 1000,
                            ContactPerson = "",
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(834),
                            Description = "實體活動描述內容區",
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(836),
                            EndTime = new DateTime(2024, 4, 8, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(817),
                            EventImage = "https://picsum.photos/1300/600/?random=15",
                            Introduction = "實體活動簡介內容區",
                            IsFree = false,
                            IsPrivateEvent = false,
                            Latitude = "120.33333",
                            LocationAddress = "",
                            LocationName = "大巨蛋",
                            Longitude = "120.33333",
                            MainOrganizer = "卡米地",
                            Name = "【演唱會】五月天",
                            OrganizationId = 2,
                            ParticipantPeople = "[\r\n  {\r\n    \"ParticipantPeopleImage\": \"https://picsum.photos/200/200/?random=10\",\r\n    \"ParticipantPeopleId\": \"DDDD\"\r\n  },\r\n  {\r\n    \"ParticipantPeopleImage\": \"https://picsum.photos/200/200/?random=14\",\r\n    \"ParticipantPeopleId\": \"EEEE\"\r\n  },\r\n  {\r\n    \"ParticipantPeopleImage\": \"https://picsum.photos/200/200/?random=18\",\r\n    \"ParticipantPeopleId\": \"FFFF\"\r\n  }\r\n]\r\n",
                            StartTime = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(815),
                            Status = (byte)1,
                            Type = (byte)1
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.EventAndTagMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("活動與類別對照ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryTagId")
                        .HasColumnType("int")
                        .HasComment("類別TagID");

                    b.Property<int>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("EventID")
                        .HasComment("活動ID");

                    b.HasKey("Id")
                        .HasName("PK_EventAndTagMapping_1");

                    b.HasIndex("CategoryTagId");

                    b.HasIndex("EventId");

                    b.ToTable("EventAndTagMapping", null, t =>
                        {
                            t.HasComment("活動與類別對照");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryTagId = 1,
                            EventId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryTagId = 2,
                            EventId = 2
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.HistoryPassword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasComment("新增時間");

                    b.Property<DateTime?>("EditedAt")
                        .HasColumnType("datetime")
                        .HasComment("修改時間");

                    b.Property<string>("UsedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("使用過的密碼");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("使用者ID");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("HistoryPassword", (string)null);
                });

            modelBuilder.Entity("ApplicationCore.Entities.IsPaidRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("付款紀錄ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasComment("訂單ID");

                    b.Property<bool?>("Result")
                        .HasColumnType("bit")
                        .HasComment("付款結果");

                    b.HasKey("Id")
                        .HasName("PK_PaymentDetail");

                    b.ToTable("IsPaidRecords", t =>
                        {
                            t.HasComment("付款紀錄");
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.LogInInfo", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("使用者ID");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("帳號");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasComment("新增時間");

                    b.Property<DateTime?>("EditedAt")
                        .HasColumnType("datetime")
                        .HasComment("修改時間");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("電子郵件");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("密碼");

                    b.HasKey("UserId");

                    b.ToTable("LogInInfo", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Account = "abc123",
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(81),
                            Email = "abc@gmail.com",
                            Password = "12345678"
                        },
                        new
                        {
                            UserId = 2,
                            Account = "def456",
                            CreatedAt = new DateTime(2024, 3, 24, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(170),
                            Email = "def@gmail.com",
                            Password = "87654321"
                        },
                        new
                        {
                            UserId = 3,
                            Account = "ghi789",
                            CreatedAt = new DateTime(2024, 3, 23, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(177),
                            Email = "ghi@gmail.com",
                            Password = "98765432"
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("訂單ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("聯絡人資料JSON");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasComment("新增時間");

                    b.Property<DateTime?>("EditedAt")
                        .HasColumnType("datetime")
                        .HasComment("修改時間");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("標記封存");

                    b.Property<bool>("IsDisplayed")
                        .HasColumnType("bit")
                        .HasComment("0不顯示參加活動1顯示");

                    b.Property<string>("ParticipantPeople")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("報名人資料JSON");

                    b.Property<byte>("PaymentType")
                        .HasColumnType("tinyint")
                        .HasComment("0免費1信用卡");

                    b.Property<string>("SeatNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("座位號碼ex3排13號");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasComment("0待付款1成功2付款失敗3取消");

                    b.Property<int>("TicketId")
                        .HasColumnType("int")
                        .HasComment("票券ID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("使用者ID");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders", t =>
                        {
                            t.HasComment("訂單");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactPerson = "{\"Name\":\"John Doe\",\"Email\":\"john.doe@example.com\",\"Phone\":\"0912345678\"}",
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1432),
                            EditedAt = new DateTime(2024, 3, 20, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1435),
                            IsDeleted = false,
                            IsDisplayed = true,
                            ParticipantPeople = "{\"Name\":\"Jane Smith\",\"Age\":25}",
                            PaymentType = (byte)1,
                            SeatNumber = "3排13號",
                            Status = (byte)1,
                            TicketId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            ContactPerson = "{\"Name\":\"Bob Johnson\",\"Email\":\"bob.johnson@example.com\",\"Phone\":\"0987654321\"}",
                            CreatedAt = new DateTime(2024, 3, 15, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1449),
                            IsDeleted = false,
                            IsDisplayed = false,
                            PaymentType = (byte)0,
                            SeatNumber = "5排8號",
                            Status = (byte)0,
                            TicketId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            ContactPerson = "{\"Name\":\"Emily Wilson\",\"Email\":\"emily.wilson@example.com\",\"Phone\":\"0923456789\"}",
                            CreatedAt = new DateTime(2024, 3, 10, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1458),
                            EditedAt = new DateTime(2024, 3, 13, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1460),
                            IsDeleted = false,
                            IsDisplayed = true,
                            ParticipantPeople = "{\"Name\":\"Michael Brown\",\"Age\":30}",
                            PaymentType = (byte)1,
                            SeatNumber = "2排5號",
                            Status = (byte)2,
                            TicketId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            ContactPerson = "{\"Name\":\"Sophia Davis\",\"Email\":\"sophia.davis@example.com\",\"Phone\":\"0935678901\"}",
                            CreatedAt = new DateTime(2024, 3, 5, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1468),
                            EditedAt = new DateTime(2024, 3, 7, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1470),
                            IsDeleted = true,
                            IsDisplayed = false,
                            PaymentType = (byte)0,
                            SeatNumber = "7排20號",
                            Status = (byte)3,
                            TicketId = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            ContactPerson = "{\"Name\":\"William Thompson\",\"Email\":\"william.thompson@example.com\",\"Phone\":\"0912345670\"}",
                            CreatedAt = new DateTime(2024, 2, 29, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1477),
                            EditedAt = new DateTime(2024, 3, 3, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1491),
                            IsDeleted = false,
                            IsDisplayed = true,
                            ParticipantPeople = "{\"Name\":\"Olivia Johnson\",\"Age\":28}",
                            PaymentType = (byte)1,
                            SeatNumber = "4排3號",
                            Status = (byte)1,
                            TicketId = 5,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            ContactPerson = "{\"Name\":\"James Anderson\",\"Email\":\"james.anderson@example.com\",\"Phone\":\"0987654320\"}",
                            CreatedAt = new DateTime(2024, 2, 24, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1499),
                            IsDeleted = false,
                            IsDisplayed = false,
                            PaymentType = (byte)0,
                            SeatNumber = "6排18號",
                            Status = (byte)0,
                            TicketId = 6,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            ContactPerson = "{\"Name\":\"Emma Thomas\",\"Email\":\"emma.thomas@example.com\",\"Phone\":\"0923456780\"}",
                            CreatedAt = new DateTime(2024, 2, 19, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1505),
                            EditedAt = new DateTime(2024, 2, 22, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1508),
                            IsDeleted = false,
                            IsDisplayed = true,
                            ParticipantPeople = "{\"Name\":\"Daniel Wilson\",\"Age\":35}",
                            PaymentType = (byte)1,
                            SeatNumber = "1排9號",
                            Status = (byte)2,
                            TicketId = 7,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            ContactPerson = "{\"Name\":\"Ava Jackson\",\"Email\":\"ava.jackson@example.com\",\"Phone\":\"0935678900\"}",
                            CreatedAt = new DateTime(2024, 2, 14, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1515),
                            EditedAt = new DateTime(2024, 2, 16, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1517),
                            IsDeleted = true,
                            IsDisplayed = false,
                            PaymentType = (byte)0,
                            SeatNumber = "8排7號",
                            Status = (byte)3,
                            TicketId = 8,
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            ContactPerson = "{\"Name\":\"Michael Taylor\",\"Email\":\"michael.taylor@example.com\",\"Phone\":\"0912345671\"}",
                            CreatedAt = new DateTime(2024, 2, 9, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1524),
                            EditedAt = new DateTime(2024, 2, 12, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1527),
                            IsDeleted = false,
                            IsDisplayed = true,
                            ParticipantPeople = "{\"Name\":\"Sophia Davis\",\"Age\":22}",
                            PaymentType = (byte)1,
                            SeatNumber = "5排15號",
                            Status = (byte)1,
                            TicketId = 9,
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            ContactPerson = "{\"Name\":\"Daniel Brown\",\"Email\":\"daniel.brown@example.com\",\"Phone\":\"0987654321\"}",
                            CreatedAt = new DateTime(2024, 2, 4, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1533),
                            IsDeleted = false,
                            IsDisplayed = false,
                            PaymentType = (byte)0,
                            SeatNumber = "3排6號",
                            Status = (byte)0,
                            TicketId = 10,
                            UserId = 10
                        },
                        new
                        {
                            Id = 11,
                            ContactPerson = "{\"Name\":\"Olivia Wilson\",\"Email\":\"olivia.wilson@example.com\",\"Phone\":\"0923456781\"}",
                            CreatedAt = new DateTime(2024, 1, 30, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1541),
                            EditedAt = new DateTime(2024, 2, 2, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1544),
                            IsDeleted = false,
                            IsDisplayed = true,
                            ParticipantPeople = "{\"Name\":\"William Johnson\",\"Age\":40}",
                            PaymentType = (byte)1,
                            SeatNumber = "7排11號",
                            Status = (byte)2,
                            TicketId = 11,
                            UserId = 11
                        },
                        new
                        {
                            Id = 12,
                            ContactPerson = "{\"Name\":\"William Davis\",\"Email\":\"william.davis@example.com\",\"Phone\":\"0935678902\"}",
                            CreatedAt = new DateTime(2024, 1, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1550),
                            EditedAt = new DateTime(2024, 1, 27, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1556),
                            IsDeleted = true,
                            IsDisplayed = false,
                            PaymentType = (byte)0,
                            SeatNumber = "4排22號",
                            Status = (byte)3,
                            TicketId = 12,
                            UserId = 12
                        },
                        new
                        {
                            Id = 13,
                            ContactPerson = "{\"Name\":\"Sophia Thompson\",\"Email\":\"sophia.thompson@example.com\",\"Phone\":\"0912345672\"}",
                            CreatedAt = new DateTime(2024, 1, 20, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1563),
                            EditedAt = new DateTime(2024, 1, 23, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1565),
                            IsDeleted = false,
                            IsDisplayed = true,
                            ParticipantPeople = "{\"Name\":\"James Anderson\",\"Age\":27}",
                            PaymentType = (byte)1,
                            SeatNumber = "6排4號",
                            Status = (byte)1,
                            TicketId = 13,
                            UserId = 13
                        },
                        new
                        {
                            Id = 14,
                            ContactPerson = "{\"Name\":\"James Johnson\",\"Email\":\"james.johnson@example.com\",\"Phone\":\"0987654322\"}",
                            CreatedAt = new DateTime(2024, 1, 15, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1572),
                            IsDeleted = false,
                            IsDisplayed = false,
                            PaymentType = (byte)0,
                            SeatNumber = "2排17號",
                            Status = (byte)0,
                            TicketId = 14,
                            UserId = 14
                        },
                        new
                        {
                            Id = 15,
                            ContactPerson = "{\"Name\":\"Emma Brown\",\"Email\":\"emma.brown@example.com\",\"Phone\":\"0923456782\"}",
                            CreatedAt = new DateTime(2024, 1, 10, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1579),
                            EditedAt = new DateTime(2024, 1, 13, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1581),
                            IsDeleted = false,
                            IsDisplayed = true,
                            ParticipantPeople = "{\"Name\":\"Olivia Thomas\",\"Age\":32}",
                            PaymentType = (byte)1,
                            SeatNumber = "8排12號",
                            Status = (byte)2,
                            TicketId = 15,
                            UserId = 15
                        },
                        new
                        {
                            Id = 16,
                            ContactPerson = "{\"Name\":\"Ava Wilson\",\"Email\":\"ava.wilson@example.com\",\"Phone\":\"0935678903\"}",
                            CreatedAt = new DateTime(2024, 1, 5, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1588),
                            EditedAt = new DateTime(2024, 1, 7, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1590),
                            IsDeleted = true,
                            IsDisplayed = false,
                            PaymentType = (byte)0,
                            SeatNumber = "5排2號",
                            Status = (byte)3,
                            TicketId = 16,
                            UserId = 16
                        },
                        new
                        {
                            Id = 17,
                            ContactPerson = "{\"Name\":\"Michael Davis\",\"Email\":\"michael.davis@example.com\",\"Phone\":\"0912345673\"}",
                            CreatedAt = new DateTime(2023, 12, 31, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1597),
                            EditedAt = new DateTime(2024, 1, 3, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1600),
                            IsDeleted = false,
                            IsDisplayed = true,
                            ParticipantPeople = "{\"Name\":\"Daniel Jackson\",\"Age\":29}",
                            PaymentType = (byte)1,
                            SeatNumber = "6排9號",
                            Status = (byte)1,
                            TicketId = 17,
                            UserId = 17
                        },
                        new
                        {
                            Id = 18,
                            ContactPerson = "{\"Name\":\"Daniel Taylor\",\"Email\":\"daniel.taylor@example.com\",\"Phone\":\"0987654323\"}",
                            CreatedAt = new DateTime(2023, 12, 26, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1606),
                            IsDeleted = false,
                            IsDisplayed = false,
                            PaymentType = (byte)0,
                            SeatNumber = "3排20號",
                            Status = (byte)0,
                            TicketId = 18,
                            UserId = 18
                        },
                        new
                        {
                            Id = 19,
                            ContactPerson = "{\"Name\":\"Olivia Anderson\",\"Email\":\"olivia.anderson@example.com\",\"Phone\":\"0923456783\"}",
                            CreatedAt = new DateTime(2023, 12, 21, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1613),
                            EditedAt = new DateTime(2023, 12, 24, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1615),
                            IsDeleted = false,
                            IsDisplayed = true,
                            ParticipantPeople = "{\"Name\":\"Emma Davis\",\"Age\":36}",
                            PaymentType = (byte)1,
                            SeatNumber = "7排3號",
                            Status = (byte)2,
                            TicketId = 19,
                            UserId = 19
                        },
                        new
                        {
                            Id = 20,
                            ContactPerson = "{\"Name\":\"William Thomas\",\"Email\":\"william.thomas@example.com\",\"Phone\":\"0935678904\"}",
                            CreatedAt = new DateTime(2023, 12, 16, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1621),
                            EditedAt = new DateTime(2023, 12, 18, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1624),
                            IsDeleted = true,
                            IsDisplayed = false,
                            PaymentType = (byte)0,
                            SeatNumber = "4排8號",
                            Status = (byte)3,
                            TicketId = 20,
                            UserId = 20
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.OrgFan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("入坑ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FanTime")
                        .HasColumnType("datetime")
                        .HasComment("成為粉絲時間");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int")
                        .HasComment("組織ID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("使用者ID");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("UserId");

                    b.ToTable("OrgFan", null, t =>
                        {
                            t.HasComment("組織粉絲");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FanTime = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1152),
                            OrganizationId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            FanTime = new DateTime(2024, 3, 24, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1157),
                            OrganizationId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("組織ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactMobile")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("聯絡手機");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("聯絡人姓名");

                    b.Property<string>("ContactTelephone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("連絡電話");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasComment("新增時間");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasComment("組織簡介");

                    b.Property<DateTime?>("EditedAt")
                        .HasColumnType("datetime")
                        .HasComment("修改時間");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Email");

                    b.Property<string>("Fblink")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FBLink")
                        .HasComment("FB連結");

                    b.Property<string>("Igaccount")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IGAccount")
                        .HasComment("IG連結");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ImgURL")
                        .HasComment("組織形象圖");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("標記封存");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("組織名稱");

                    b.Property<string>("OrganizationUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OrganizationURL")
                        .HasComment("站內連結");

                    b.Property<string>("OuterUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OuterURL")
                        .HasComment("站外連結");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int")
                        .HasComment("擁有者UserId");

                    b.HasKey("Id")
                        .HasName("PK_OrganizationInfo");

                    b.HasIndex("OwnerId");

                    b.ToTable("Organizations", t =>
                        {
                            t.HasComment("組織");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactMobile = "0123456789",
                            ContactName = "Alice",
                            ContactTelephone = "02-2123-45678",
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1028),
                            Description = "組織簡介內容區",
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1031),
                            Name = "Build School",
                            OrganizationUrl = "HTTP",
                            OwnerId = 1
                        },
                        new
                        {
                            Id = 2,
                            ContactMobile = "0123456789",
                            ContactName = "Bob",
                            ContactTelephone = "02-2123-45678",
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1041),
                            Description = "組織簡介內容區",
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1043),
                            Name = "卡米地",
                            OrganizationUrl = "HTTP",
                            OwnerId = 2
                        },
                        new
                        {
                            Id = 3,
                            ContactMobile = "0123456789",
                            ContactName = "Charlie",
                            ContactTelephone = "02-2123-45678",
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1050),
                            Description = "組織簡介內容區",
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1052),
                            Name = "海邊的卡夫卡",
                            OrganizationUrl = "HTTP",
                            OwnerId = 3
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.OrganizationAndUserMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("組織與使用者對照ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int")
                        .HasComment("組織ID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("使用者ID");

                    b.HasKey("Id")
                        .HasName("PK_OrganizationUserMapping");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("UserId");

                    b.ToTable("OrganizationAndUserMapping", null, t =>
                        {
                            t.HasComment("組織與使用者對照");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrganizationId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            OrganizationId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            OrganizationId = 3,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.PreFill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("預填資料ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("聯絡地址");

                    b.Property<string>("CompanyAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("公司地址");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("公司名稱");

                    b.Property<int?>("CompanyPostalCode")
                        .HasColumnType("int")
                        .HasComment("公司郵遞區號");

                    b.Property<string>("County")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("縣市");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasComment("新增時間");

                    b.Property<string>("District")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("鄉鎮區域");

                    b.Property<DateTime?>("EditedAt")
                        .HasColumnType("datetime")
                        .HasComment("修改時間");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("手機號碼");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("姓名");

                    b.Property<int?>("PostalCode")
                        .HasColumnType("int")
                        .HasComment("郵遞區號");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("職稱");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("使用者ID");

                    b.HasKey("Id")
                        .HasName("PK_Prefill_1");

                    b.HasIndex("UserId");

                    b.ToTable("PreFill", null, t =>
                        {
                            t.HasComment("報名預填資料");
                        });

                    b.HasData(
                        new
                        {
                            Id = 11,
                            Address = "No.1, Lane 10, Section 3, Zhongxiao E Rd",
                            County = "Taipei",
                            CreatedAt = new DateTime(2024, 3, 15, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(2171),
                            District = "Daan",
                            Mobile = "0912345678",
                            Name = "John Doe",
                            PostalCode = 106,
                            UserId = 11
                        },
                        new
                        {
                            Id = 12,
                            Address = "No.100, Guandu Rd",
                            County = "New Taipei",
                            CreatedAt = new DateTime(2024, 3, 16, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(2180),
                            District = "Banqiao",
                            Mobile = "0912345679",
                            Name = "Jane Doe",
                            PostalCode = 107,
                            UserId = 12
                        },
                        new
                        {
                            Id = 13,
                            Address = "No.20, Jhongsing Rd",
                            County = "Taoyuan",
                            CreatedAt = new DateTime(2024, 3, 17, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(2187),
                            District = "Zhongli",
                            Mobile = "0923456789",
                            Name = "Mike Chen",
                            PostalCode = 108,
                            UserId = 13
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.PreferredActivityArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("偏好區域ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaId")
                        .HasColumnType("int")
                        .HasComment("區域ID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("使用者ID");

                    b.HasKey("Id")
                        .HasName("PK_PreferredActivityArea_1");

                    b.HasIndex("AreaId");

                    b.HasIndex("UserId");

                    b.ToTable("PreferredActivityArea", null, t =>
                        {
                            t.HasComment("使用者偏好活動區域");
                        });

                    b.HasData(
                        new
                        {
                            Id = 4,
                            AreaId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            AreaId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            AreaId = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            AreaId = 4,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Seat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("座位ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasComment("新增時間");

                    b.Property<DateTime?>("EditedAt")
                        .HasColumnType("datetime")
                        .HasComment("修改時間");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("標記封存");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("座位號碼ex3排13號");

                    b.Property<int>("SeatAreaId")
                        .HasColumnType("int")
                        .HasComment("座位區域ID");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasComment("0可選1已選2不可選");

                    b.HasKey("Id");

                    b.HasIndex("SeatAreaId");

                    b.ToTable("Seats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(234),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(237),
                            IsDeleted = false,
                            Number = "1排1號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(244),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(262),
                            IsDeleted = false,
                            Number = "1排2號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(285),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(288),
                            IsDeleted = false,
                            Number = "1排3號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(293),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(295),
                            IsDeleted = false,
                            Number = "1排4號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(302),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(304),
                            IsDeleted = false,
                            Number = "1排5號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(309),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(311),
                            IsDeleted = false,
                            Number = "1排6號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(315),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(318),
                            IsDeleted = false,
                            Number = "1排7號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(323),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(325),
                            IsDeleted = false,
                            Number = "1排8號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(330),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(332),
                            IsDeleted = false,
                            Number = "1排9號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(337),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(339),
                            IsDeleted = false,
                            Number = "1排10號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(343),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(345),
                            IsDeleted = false,
                            Number = "1排11號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(350),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(352),
                            IsDeleted = false,
                            Number = "1排12號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(356),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(358),
                            IsDeleted = false,
                            Number = "1排13號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(363),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(365),
                            IsDeleted = false,
                            Number = "1排14號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(369),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(371),
                            IsDeleted = false,
                            Number = "1排15號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(376),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(378),
                            IsDeleted = false,
                            Number = "1排16號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(382),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(384),
                            IsDeleted = false,
                            Number = "1排17號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(389),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(391),
                            IsDeleted = false,
                            Number = "2排1號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(396),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(397),
                            IsDeleted = false,
                            Number = "2排2號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(402),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(404),
                            IsDeleted = false,
                            Number = "2排3號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(409),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(411),
                            IsDeleted = false,
                            Number = "2排4號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(416),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(418),
                            IsDeleted = false,
                            Number = "2排5號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(423),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(424),
                            IsDeleted = false,
                            Number = "2排6號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(429),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(431),
                            IsDeleted = false,
                            Number = "2排7號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(436),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(438),
                            IsDeleted = false,
                            Number = "2排8號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(442),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(444),
                            IsDeleted = false,
                            Number = "2排9號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(452),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(454),
                            IsDeleted = false,
                            Number = "2排10號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(459),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(460),
                            IsDeleted = false,
                            Number = "2排11號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(465),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(467),
                            IsDeleted = false,
                            Number = "2排12號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(472),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(474),
                            IsDeleted = false,
                            Number = "2排13號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(478),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(480),
                            IsDeleted = false,
                            Number = "2排14號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(485),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(489),
                            IsDeleted = false,
                            Number = "2排15號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(494),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(496),
                            IsDeleted = false,
                            Number = "2排16號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(500),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(502),
                            IsDeleted = false,
                            Number = "2排17號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(507),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(509),
                            IsDeleted = false,
                            Number = "3排1號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(514),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(516),
                            IsDeleted = false,
                            Number = "3排2號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(521),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(523),
                            IsDeleted = false,
                            Number = "3排3號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(528),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(530),
                            IsDeleted = false,
                            Number = "3排4號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(534),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(536),
                            IsDeleted = false,
                            Number = "3排5號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(541),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(543),
                            IsDeleted = false,
                            Number = "3排6號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 41,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(547),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(549),
                            IsDeleted = false,
                            Number = "3排7號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 42,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(554),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(556),
                            IsDeleted = false,
                            Number = "3排8號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 43,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(561),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(563),
                            IsDeleted = false,
                            Number = "3排9號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 44,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(567),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(569),
                            IsDeleted = false,
                            Number = "3排10號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 45,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(574),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(576),
                            IsDeleted = false,
                            Number = "3排11號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 46,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(580),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(582),
                            IsDeleted = false,
                            Number = "3排12號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 47,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(589),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(591),
                            IsDeleted = false,
                            Number = "3排13號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 48,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(596),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(598),
                            IsDeleted = false,
                            Number = "3排14號",
                            SeatAreaId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 49,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(603),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(605),
                            IsDeleted = false,
                            Number = "3排16號",
                            SeatAreaId = 1,
                            Status = (byte)0
                        },
                        new
                        {
                            Id = 50,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(609),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(611),
                            IsDeleted = false,
                            Number = "3排17號",
                            SeatAreaId = 1,
                            Status = (byte)0
                        },
                        new
                        {
                            Id = 51,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(616),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(618),
                            IsDeleted = false,
                            Number = "4排1號",
                            SeatAreaId = 1,
                            Status = (byte)0
                        },
                        new
                        {
                            Id = 52,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(622),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(625),
                            IsDeleted = false,
                            Number = "4排2號",
                            SeatAreaId = 1,
                            Status = (byte)0
                        },
                        new
                        {
                            Id = 53,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(629),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(631),
                            IsDeleted = false,
                            Number = "4排3號",
                            SeatAreaId = 1,
                            Status = (byte)0
                        },
                        new
                        {
                            Id = 54,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(636),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(638),
                            IsDeleted = false,
                            Number = "4排4號",
                            SeatAreaId = 1,
                            Status = (byte)0
                        },
                        new
                        {
                            Id = 55,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(642),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(644),
                            IsDeleted = false,
                            Number = "4排5號",
                            SeatAreaId = 1,
                            Status = (byte)0
                        },
                        new
                        {
                            Id = 56,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(649),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(651),
                            IsDeleted = false,
                            Number = "4排6號",
                            SeatAreaId = 1,
                            Status = (byte)0
                        },
                        new
                        {
                            Id = 57,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(656),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(658),
                            IsDeleted = false,
                            Number = "4排7號",
                            SeatAreaId = 1,
                            Status = (byte)0
                        },
                        new
                        {
                            Id = 58,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(662),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(664),
                            IsDeleted = false,
                            Number = "4排8號",
                            SeatAreaId = 1,
                            Status = (byte)0
                        },
                        new
                        {
                            Id = 59,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(669),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(671),
                            IsDeleted = false,
                            Number = "4排9號",
                            SeatAreaId = 1,
                            Status = (byte)0
                        },
                        new
                        {
                            Id = 60,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(676),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(678),
                            IsDeleted = false,
                            Number = "4排10號",
                            SeatAreaId = 1,
                            Status = (byte)0
                        },
                        new
                        {
                            Id = 61,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(690),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(692),
                            IsDeleted = false,
                            Number = "4排11號",
                            SeatAreaId = 1,
                            Status = (byte)0
                        },
                        new
                        {
                            Id = 62,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(696),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(698),
                            IsDeleted = false,
                            Number = "4排12號",
                            SeatAreaId = 1,
                            Status = (byte)0
                        },
                        new
                        {
                            Id = 63,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(703),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(704),
                            IsDeleted = false,
                            Number = "4排13號",
                            SeatAreaId = 1,
                            Status = (byte)0
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.SeatArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("座位區域ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasComment("新增時間");

                    b.Property<DateTime?>("EditedAt")
                        .HasColumnType("datetime")
                        .HasComment("修改時間");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("標記封存");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("座位區域名稱");

                    b.HasKey("Id");

                    b.ToTable("SeatAreas");

                    b.HasData(
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 3, 10, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(2071),
                            IsDeleted = false,
                            Name = "F區"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 3, 11, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(2079),
                            IsDeleted = false,
                            Name = "G區"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 3, 12, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(2084),
                            IsDeleted = false,
                            Name = "H區"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 3, 13, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(2089),
                            IsDeleted = false,
                            Name = "I區"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 3, 14, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(2093),
                            IsDeleted = false,
                            Name = "J區"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 3, 15, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(2098),
                            IsDeleted = false,
                            Name = "K區"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 3, 16, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(2103),
                            IsDeleted = false,
                            Name = "L區"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 3, 17, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(2107),
                            IsDeleted = false,
                            Name = "M區"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 3, 18, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(2112),
                            IsDeleted = false,
                            Name = "N區"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 3, 19, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(2117),
                            IsDeleted = false,
                            Name = "O區"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2024, 3, 20, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(2121),
                            IsDeleted = false,
                            Name = "P區"
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("票券ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CheckCode")
                        .HasColumnType("int")
                        .HasComment("檢查碼");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasComment("新增時間");

                    b.Property<DateTime?>("EditedAt")
                        .HasColumnType("datetime")
                        .HasComment("修改時間");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("作廢票券");

                    b.Property<string>("Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("票號");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasComment("訂單ID");

                    b.Property<int?>("SeatId")
                        .HasColumnType("int")
                        .HasComment("座位ID");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasComment("0未驗票1驗票成功");

                    b.Property<int>("TicketTypeId")
                        .HasColumnType("int")
                        .HasComment("票種ID");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("SeatId");

                    b.HasIndex("TicketTypeId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 21,
                            CheckCode = 1234,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1677),
                            IsDeleted = false,
                            Number = "A123456789",
                            OrderId = 1,
                            SeatId = 1,
                            Status = (byte)0,
                            TicketTypeId = 1
                        },
                        new
                        {
                            Id = 22,
                            CheckCode = 1235,
                            CreatedAt = new DateTime(2024, 3, 24, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1686),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1689),
                            IsDeleted = false,
                            Number = "B987654321",
                            OrderId = 2,
                            Status = (byte)1,
                            TicketTypeId = 2
                        },
                        new
                        {
                            Id = 23,
                            CheckCode = 1236,
                            CreatedAt = new DateTime(2024, 3, 23, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1697),
                            IsDeleted = true,
                            Number = "C123456789",
                            SeatId = 3,
                            Status = (byte)0,
                            TicketTypeId = 3
                        },
                        new
                        {
                            Id = 24,
                            CheckCode = 1237,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1704),
                            IsDeleted = false,
                            Number = "A123456789",
                            OrderId = 1,
                            SeatId = 1,
                            Status = (byte)0,
                            TicketTypeId = 1
                        },
                        new
                        {
                            Id = 25,
                            CheckCode = 1238,
                            CreatedAt = new DateTime(2024, 3, 24, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1710),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1712),
                            IsDeleted = false,
                            Number = "B987654321",
                            OrderId = 2,
                            Status = (byte)1,
                            TicketTypeId = 2
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.TicketType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("票種ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CapacityAmount")
                        .HasColumnType("int")
                        .HasComment("票券數量");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasComment("新增時間");

                    b.Property<DateTime?>("EditedAt")
                        .HasColumnType("datetime")
                        .HasComment("修改時間");

                    b.Property<DateTime>("EndSaleTime")
                        .HasColumnType("datetime")
                        .HasComment("結束販售時間");

                    b.Property<int>("EventId")
                        .HasColumnType("int")
                        .HasComment("活動ID");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasComment("強制下架");

                    b.Property<int?>("IsDisplayed")
                        .HasColumnType("int")
                        .HasComment("是否顯示");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("票種名稱");

                    b.Property<decimal>("Price")
                        .HasColumnType("money")
                        .HasComment("票價");

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("預設值50");

                    b.Property<DateTime>("StartSaleTime")
                        .HasColumnType("datetime")
                        .HasComment("開始販售時間");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("TicketTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CapacityAmount = 300,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1330),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1332),
                            EndSaleTime = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1321),
                            EventId = 1,
                            Name = "Free",
                            Price = 0m,
                            StartSaleTime = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1319)
                        },
                        new
                        {
                            Id = 2,
                            CapacityAmount = 50,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1350),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1352),
                            EndSaleTime = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1341),
                            EventId = 2,
                            Name = "搖滾票",
                            Price = 6800m,
                            StartSaleTime = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1338)
                        },
                        new
                        {
                            Id = 3,
                            CapacityAmount = 200,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1363),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1365),
                            EndSaleTime = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1359),
                            EventId = 2,
                            Name = "一般票",
                            Price = 2800m,
                            StartSaleTime = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1357)
                        },
                        new
                        {
                            Id = 4,
                            CapacityAmount = 400,
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1374),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1376),
                            EndSaleTime = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1371),
                            EventId = 2,
                            Name = "站票",
                            Price = 800m,
                            StartSaleTime = new DateTime(2024, 3, 25, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(1369)
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("使用者ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("date")
                        .HasComment("生日");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasComment("新增時間");

                    b.Property<DateTime?>("EditedAt")
                        .HasColumnType("datetime")
                        .HasComment("修改時間");

                    b.Property<bool>("EdmSubscription")
                        .HasColumnType("bit")
                        .HasComment("訂閱電子報");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint")
                        .HasComment("性別");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("帳號照片");

                    b.Property<DateTime?>("LastLogInAt")
                        .HasColumnType("datetime")
                        .HasComment("上次登入時間");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("手機號碼");

                    b.Property<string>("Nickname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("暱稱");

                    b.Property<string>("PersonalProfile")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasComment("個人簡介");

                    b.Property<string>("PersonalUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PersonalURL")
                        .HasComment("個人網址");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasComment("0未驗證EMAIL1已驗證EMAIL");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 413, DateTimeKind.Local).AddTicks(9970),
                            EditedAt = new DateTime(2024, 3, 25, 21, 23, 3, 413, DateTimeKind.Local).AddTicks(9974),
                            EdmSubscription = true,
                            Gender = (byte)1,
                            Image = "https://image.com/alice.jpg",
                            LastLogInAt = new DateTime(2024, 3, 25, 21, 23, 3, 413, DateTimeKind.Local).AddTicks(9923),
                            Mobile = "0912345678",
                            Nickname = "Alice",
                            PersonalProfile = "I'm Alice!",
                            PersonalUrl = "https://alice.com",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateTime(1985, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2024, 3, 25, 21, 23, 3, 413, DateTimeKind.Local).AddTicks(9988),
                            EdmSubscription = false,
                            Gender = (byte)2,
                            Mobile = "0987654321",
                            Nickname = "Bob",
                            Status = (byte)0
                        },
                        new
                        {
                            Id = 3,
                            Birthday = new DateTime(1995, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2024, 3, 15, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(12),
                            EditedAt = new DateTime(2024, 3, 23, 21, 23, 3, 414, DateTimeKind.Local).AddTicks(15),
                            EdmSubscription = true,
                            Gender = (byte)2,
                            Image = "https://image.com/charlie.png",
                            LastLogInAt = new DateTime(2024, 3, 20, 21, 23, 3, 413, DateTimeKind.Local).AddTicks(9998),
                            Mobile = "0955555555",
                            Nickname = "Charlie",
                            PersonalProfile = "Hello world!",
                            PersonalUrl = "https://charlie.com",
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.ArchiveOrder", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Order", "Order")
                        .WithOne("ArchiveOrder")
                        .HasForeignKey("ApplicationCore.Entities.ArchiveOrder", "OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_ArchiveOrders_Orders");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Event", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Organization", "Organization")
                        .WithMany("Events")
                        .HasForeignKey("OrganizationId")
                        .IsRequired()
                        .HasConstraintName("FK_Events_Organizations");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("ApplicationCore.Entities.EventAndTagMapping", b =>
                {
                    b.HasOne("ApplicationCore.Entities.CategoryTag", "CategoryTag")
                        .WithMany("EventAndTagMappings")
                        .HasForeignKey("CategoryTagId")
                        .IsRequired()
                        .HasConstraintName("FK_Event and Tag Mapping_Tags");

                    b.HasOne("ApplicationCore.Entities.Event", "Event")
                        .WithMany("EventAndTagMappings")
                        .HasForeignKey("EventId")
                        .IsRequired()
                        .HasConstraintName("FK_EventAndTagMapping_pEvents");

                    b.Navigation("CategoryTag");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("ApplicationCore.Entities.HistoryPassword", b =>
                {
                    b.HasOne("ApplicationCore.Entities.User", "User")
                        .WithMany("HistoryPasswords")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_HistoryPassword_Users1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApplicationCore.Entities.LogInInfo", b =>
                {
                    b.HasOne("ApplicationCore.Entities.User", "User")
                        .WithOne("LogInInfo")
                        .HasForeignKey("ApplicationCore.Entities.LogInInfo", "UserId")
                        .IsRequired()
                        .HasConstraintName("FK_LogInInfo_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Order", b =>
                {
                    b.HasOne("ApplicationCore.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Orders_Users1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApplicationCore.Entities.OrgFan", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Organization", "Organization")
                        .WithMany("OrgFans")
                        .HasForeignKey("OrganizationId")
                        .IsRequired()
                        .HasConstraintName("FK_OrgFan_Organizations");

                    b.HasOne("ApplicationCore.Entities.User", "User")
                        .WithMany("OrgFans")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_OrgFan_Users");

                    b.Navigation("Organization");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Organization", b =>
                {
                    b.HasOne("ApplicationCore.Entities.User", "Owner")
                        .WithMany("Organizations")
                        .HasForeignKey("OwnerId")
                        .IsRequired()
                        .HasConstraintName("FK_Organizations_Users");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("ApplicationCore.Entities.OrganizationAndUserMapping", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Organization", "Organization")
                        .WithMany("OrganizationAndUserMappings")
                        .HasForeignKey("OrganizationId")
                        .IsRequired()
                        .HasConstraintName("FK_OrganizationAndUserMapping_Organizations");

                    b.HasOne("ApplicationCore.Entities.User", "User")
                        .WithMany("OrganizationAndUserMappings")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_OrganizationAndUserMapping_Users");

                    b.Navigation("Organization");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApplicationCore.Entities.PreFill", b =>
                {
                    b.HasOne("ApplicationCore.Entities.User", "User")
                        .WithMany("PreFills")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_PreFill_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApplicationCore.Entities.PreferredActivityArea", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Area", "Area")
                        .WithMany("PreferredActivityAreas")
                        .HasForeignKey("AreaId")
                        .IsRequired()
                        .HasConstraintName("FK_PreferredActivityArea_Area");

                    b.HasOne("ApplicationCore.Entities.User", "User")
                        .WithMany("PreferredActivityAreas")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_PreferredActivityArea_Users");

                    b.Navigation("Area");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Seat", b =>
                {
                    b.HasOne("ApplicationCore.Entities.SeatArea", "SeatArea")
                        .WithMany("Seats")
                        .HasForeignKey("SeatAreaId")
                        .IsRequired()
                        .HasConstraintName("FK_Seats_SeatAreas");

                    b.Navigation("SeatArea");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Ticket", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Order", "Order")
                        .WithMany("Tickets")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_Tickets_Orders");

                    b.HasOne("ApplicationCore.Entities.Seat", "Seat")
                        .WithMany("Tickets")
                        .HasForeignKey("SeatId")
                        .HasConstraintName("FK_Tickets_Seats");

                    b.HasOne("ApplicationCore.Entities.TicketType", "TicketType")
                        .WithMany("Tickets")
                        .HasForeignKey("TicketTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_Tickets_TicketTypes");

                    b.Navigation("Order");

                    b.Navigation("Seat");

                    b.Navigation("TicketType");
                });

            modelBuilder.Entity("ApplicationCore.Entities.TicketType", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Event", "Event")
                        .WithMany("TicketTypes")
                        .HasForeignKey("EventId")
                        .IsRequired()
                        .HasConstraintName("FK_TicketTypes_Events");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Area", b =>
                {
                    b.Navigation("PreferredActivityAreas");
                });

            modelBuilder.Entity("ApplicationCore.Entities.CategoryTag", b =>
                {
                    b.Navigation("EventAndTagMappings");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Event", b =>
                {
                    b.Navigation("EventAndTagMappings");

                    b.Navigation("TicketTypes");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Order", b =>
                {
                    b.Navigation("ArchiveOrder");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Organization", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("OrgFans");

                    b.Navigation("OrganizationAndUserMappings");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Seat", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("ApplicationCore.Entities.SeatArea", b =>
                {
                    b.Navigation("Seats");
                });

            modelBuilder.Entity("ApplicationCore.Entities.TicketType", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("ApplicationCore.Entities.User", b =>
                {
                    b.Navigation("HistoryPasswords");

                    b.Navigation("LogInInfo");

                    b.Navigation("Orders");

                    b.Navigation("OrgFans");

                    b.Navigation("OrganizationAndUserMappings");

                    b.Navigation("Organizations");

                    b.Navigation("PreFills");

                    b.Navigation("PreferredActivityAreas");
                });
#pragma warning restore 612, 618
        }
    }
}
